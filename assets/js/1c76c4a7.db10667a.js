"use strict";(self.webpackChunk_redredgroup_samsungknox_docs=self.webpackChunk_redredgroup_samsungknox_docs||[]).push([[6456],{9629:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var r=t(7458),o=t(1135);const s={sidebar_position:5,title:"Generate Base64 Encoded String PublicKey",description:"Describes how to use the library to generate Base64 encoded Public Keys available in Samsung Knox."},i="Generate Base64 Encoded String PublicKey",a={id:"knox-token-library/generate-base64-encoded-string-publickey",title:"Generate Base64 Encoded String PublicKey",description:"Describes how to use the library to generate Base64 encoded Public Keys available in Samsung Knox.",source:"@site/docs/knox-token-library/generate-base64-encoded-string-publickey.md",sourceDirName:"knox-token-library",slug:"/knox-token-library/generate-base64-encoded-string-publickey",permalink:"/samsungknox/docs/knox-token-library/generate-base64-encoded-string-publickey",draft:!1,unlisted:!1,editUrl:"https://github.com/REDREDGROUP/samsungknox/docs/knox-token-library/generate-base64-encoded-string-publickey.md",tags:[],version:"current",lastUpdatedAt:1701101608,formattedLastUpdatedAt:"Nov 27, 2023",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Generate Base64 Encoded String PublicKey",description:"Describes how to use the library to generate Base64 encoded Public Keys available in Samsung Knox."},sidebar:"tutorialSidebar",previous:{title:"Generate Signed API Access Token",permalink:"/samsungknox/docs/knox-token-library/generate-signed-api-access-token"},next:{title:"Knox API",permalink:"/samsungknox/docs/category/knox-api"}},c={},d=[];function l(e){const n={code:"code",h1:"h1",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"generate-base64-encoded-string-publickey",children:"Generate Base64 Encoded String PublicKey"}),"\n",(0,r.jsxs)(n.p,{children:["KnoxTokenUtility class provides the following method to generate a ",(0,r.jsx)(n.strong,{children:"signed api access token"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import knoxTokenLibrary from '@redredgroup/samsungknox-token-library';\n\nconst { publicKey } = await knoxTokenLibrary.generateBase64EncodedStringPublicKey({\n  credential: {\n    // provide either key or path.\n    path: 'credential.json',\n    key: 'credential',\n  },\n});\n\nconsole.log(publicKey);\n"})}),"\n",(0,r.jsx)(n.p,{children:"Input parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"credentialPath: An input stream of the Knox credential (credential.json) that was downloaded from Knox Api portal."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Output:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The public key encoded in Base 64 is outputted as a String."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},1135:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>i});var r=t(2983);const o={},s=r.createContext(o);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);