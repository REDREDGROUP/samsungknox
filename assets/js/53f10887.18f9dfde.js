"use strict";(self.webpackChunk_redredgroup_samsungknox_docs=self.webpackChunk_redredgroup_samsungknox_docs||[]).push([[938],{7890:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>l,frontMatter:()=>t,metadata:()=>r,toc:()=>a});var i=o(7458),s=o(1135);const t={sidebar_position:2,title:"Get Device Logs"},c="Get Device Logs",r={id:"knox-api/knox-configure/device/get-device-logs",title:"Get Device Logs",description:"To get the  device Logs of KnoxConfigure, use the following methods.",source:"@site/docs/knox-api/knox-configure/device/get-device-logs.md",sourceDirName:"knox-api/knox-configure/device",slug:"/knox-api/knox-configure/device/get-device-logs",permalink:"/samsungknox/docs/knox-api/knox-configure/device/get-device-logs",draft:!1,unlisted:!1,editUrl:"https://github.com/REDREDGROUP/samsungknox/docs/knox-api/knox-configure/device/get-device-logs.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Get Device Logs"},sidebar:"tutorialSidebar",previous:{title:"Get Device (Many)",permalink:"/samsungknox/docs/knox-api/knox-configure/device/get-devices"},next:{title:"Delete Device",permalink:"/samsungknox/docs/knox-api/knox-configure/device/delete-devices"}},d={},a=[];function g(e){const n={code:"code",h1:"h1",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"get-device-logs",children:"Get Device Logs"}),"\n",(0,i.jsxs)(n.p,{children:["To get the  ",(0,i.jsx)(n.strong,{children:"device Logs of KnoxConfigure"}),", use the following methods."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import { kcGetDeviceLogs } from '@redredgroup/samsungknox-api';\n\nconst kcGetDeviceLog =  await kcGetDeviceLogs ({\n  args: {\n    deviceId: 'YOUR_DEVICE_ID'\n  },\n  region: 'YOUR_KNOX_REGION',\n  knoxAccessToken: 'YOUR_JWT_TOKEN',\n})\n\nconsole.log(kcGetDeviceLog)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Input parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["args: Insert parameters for the device (required) ",(0,i.jsx)(n.strong,{children:"deviceId"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"region: Insert the Knox region. Most of them are EU (case insensitive)"}),"\n",(0,i.jsxs)(n.li,{children:["knoxAccessToken: Your ",(0,i.jsx)(n.strong,{children:"X-KNOX-APITOKEN"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Output:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Responds with a detailed log for the Device."}),"\n"]})]})}function l(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(g,{...e})}):g(e)}},1135:(e,n,o)=>{o.d(n,{Z:()=>r,a:()=>c});var i=o(2983);const s={},t=i.createContext(s);function c(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);