"use strict";(self.webpackChunk_redredgroup_samsungknox_docs=self.webpackChunk_redredgroup_samsungknox_docs||[]).push([[5428],{1205:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>g,frontMatter:()=>o,metadata:()=>d,toc:()=>l});var i=t(7458),r=t(1135);const o={sidebar_position:3,title:"Generate Signed ClientIdentifier"},s="Generate Signed ClientIdentifier",d={id:"knox-token-library/generate-signed-clientidentifier",title:"Generate Signed ClientIdentifier",description:"The following method is provided to generate a signed client identifier.",source:"@site/docs/knox-token-library/generate-signed-clientidentifier.md",sourceDirName:"knox-token-library",slug:"/knox-token-library/generate-signed-clientidentifier",permalink:"/samsungknox/docs/knox-token-library/generate-signed-clientidentifier",draft:!1,unlisted:!1,editUrl:"https://github.com/REDREDGROUP/samsungknox/docs/knox-token-library/generate-signed-clientidentifier.md",tags:[],version:"current",lastUpdatedAt:1700992890,formattedLastUpdatedAt:"Nov 26, 2023",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Generate Signed ClientIdentifier"},sidebar:"tutorialSidebar",previous:{title:"Get Started",permalink:"/samsungknox/docs/knox-token-library/get-started"},next:{title:"Generate Signed API Access Token",permalink:"/samsungknox/docs/knox-token-library/generate-signed-api-access-token"}},a={},l=[];function c(e){const n={code:"code",h1:"h1",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"generate-signed-clientidentifier",children:"Generate Signed ClientIdentifier"}),"\n",(0,i.jsxs)(n.p,{children:["The following method is provided to generate a ",(0,i.jsx)(n.strong,{children:"signed client identifier"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import knoxTokenLibrary from '@redredgroup/samsungknox-token-library';\n\nconst { accessToken } = await knoxTokenLibrary.generateSignedClientIdentifierJWT({\n  credential: {\n    // provide either key or path.\n    path: 'credential.json',\n    key: 'credential',\n  },\n  clientIdentifierJwtToken: 'my-client-identifier',\n});\n\nconsole.log(accessToken);\n"})}),"\n",(0,i.jsx)(n.p,{children:"Input parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"credential: An input stream of the Knox credential (credential.json) that was downloaded from Knox Api portal."}),"\n",(0,i.jsx)(n.li,{children:"clientIdentifier: The string ClientIdentifier downloaded from Knox Api portal."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Output:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A String representing the ClientIdentifier signed with the primary key from the downloaded credential."}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},1135:(e,n,t)=>{t.d(n,{Z:()=>d,a:()=>s});var i=t(2983);const r={},o=i.createContext(r);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);